commit 21197c680b73446fcecc4e509a1410d54d5c52a2
Author: Stephen Segal <ssegal@meraki.com>
Date:   Fri Jan 6 22:04:56 2017 -0800

    Only do symbol versioning with GCC >= 5
    
    On Meraki builds using GCC 4.8.3 the symbol versioning doesn't work,
    causing a segfault.  Now we only enable it for GCC 5 or later.

diff --git a/lib/misc/lib.h b/lib/misc/lib.h
index 8ed06f8..ef83773 100644
--- a/lib/misc/lib.h
+++ b/lib/misc/lib.h
@@ -68,7 +68,7 @@
  * versions of library symbols prior to the introduction of symbol
  * versioning: it must never be used for new symbols.
  */
-#if defined(__GNUC__)
+#if defined(__GNUC__) && (__GNUC__ >= 5)
 #define DM_EXPORT_SYMBOL(func, ver) \
 	__asm__(".symver " #func "_v" #ver ", " #func "@DM_" #ver )
 #define DM_EXPORT_SYMBOL_BASE(func) \
diff --git a/libdm/ioctl/libdm-iface.c b/libdm/ioctl/libdm-iface.c
index 390daa1..4ad65f7 100644
--- a/libdm/ioctl/libdm-iface.c
+++ b/libdm/ioctl/libdm-iface.c
@@ -2126,7 +2126,7 @@ void dm_lib_exit(void)
 	_version_checked = 0;
 }
 
-#if defined(__GNUC__)
+#if defined(__GNUC__) && (__GNUC__ >= 5)
 /*
  * Maintain binary backward compatibility.
  * Version script mechanism works with 'gcc' compatible compilers only.
diff --git a/libdm/libdm-deptree.c b/libdm/libdm-deptree.c
index d74bb9c..48de499 100644
--- a/libdm/libdm-deptree.c
+++ b/libdm/libdm-deptree.c
@@ -3897,7 +3897,7 @@ void dm_tree_node_set_callback(struct dm_tree_node *dnode,
  * Keep these at the end of the file to avoid adding clutter around the
  * current dm_tree_node_size_changed() version.
  */
-#if defined(__GNUC__)
+#if defined(__GNUC__) && (__GNUC__ >= 5)
 int dm_tree_node_size_changed_base(const struct dm_tree_node *dnode);
 DM_EXPORT_SYMBOL_BASE(dm_tree_node_size_changed);
 int dm_tree_node_size_changed_base(const struct dm_tree_node *dnode)
diff --git a/libdm/libdm-stats.c b/libdm/libdm-stats.c
index 6932b28..29565aa 100644
--- a/libdm/libdm-stats.c
+++ b/libdm/libdm-stats.c
@@ -4394,7 +4394,7 @@ uint64_t *dm_stats_create_regions_from_fd(struct dm_stats *dms, int fd,
  * current dm_stats_create_region() version.
  */
 
-#if defined(__GNUC__)
+#if defined(__GNUC__) && (__GNUC__ >= 5)
 int dm_stats_create_region_v1_02_106(struct dm_stats *dms, uint64_t *region_id,
 				     uint64_t start, uint64_t len, int64_t step,
 				     int precise, const char *program_id,
