--- a/src/comm/Connection.cc
+++ b/src/comm/Connection.cc
@@ -14,6 +14,13 @@
 #include "fde.h"
 #include "neighbors.h"
 #include "SquidTime.h"
+#include "SquidConfig.h"
+#include "tools.h"
+
+#include <sys/socket.h>
+#include <string>
+
+#include <sstream>
 
 class CachePeer;
 bool
@@ -73,6 +80,32 @@ void
 Comm::Connection::close()
 {
     if (isOpen()) {
+        if (strcmp(Config.click_mapper_remove, "none") != 0) {
+            enter_suid();
+            int cfd = open(Config.click_mapper_remove, O_TRUNC | O_WRONLY, 0644);
+            leave_suid();
+
+            if (cfd < 0) {
+                debugs(50, DBG_IMPORTANT, "Failed to open SquidFlowMapper remove");
+            } else {
+                struct sockaddr_in adr_inet;
+                int len_inet = sizeof(adr_inet);
+
+                if (!getsockname(fd, (struct sockaddr *)&adr_inet, (socklen_t *) &len_inet)) {
+
+                    char buf[MAX_IPSTRLEN];
+                    std::stringstream ss;
+                    ss << "SADDR " << inet_ntoa(adr_inet.sin_addr) << ", SPORT " << (unsigned) ntohs(adr_inet.sin_port) << ", ";
+
+                    remote.toHostStr(buf, sizeof(buf));
+                    ss << "DADDR " <<  buf << ", DPORT " << remote.port() << std::endl;
+                    write(cfd, ss.str().c_str(), ss.str().size());
+
+                    ::close(cfd);
+                }
+            }
+        }
+
         comm_close(fd);
         noteClosure();
     }
